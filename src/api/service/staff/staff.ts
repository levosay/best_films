/**
 * Generated by orval v6.10.3 üç∫
 * Do not edit manually.
 * Kinopoisk Unofficial API
 * Kinopoisk Unofficial API –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º —Å–∞–π—Ç–∞ https://www.kinopoisk.ru. –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤—ã –¥–æ–ª–∂–Ω—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ <a href="https://kinopoiskapiunofficial.tech">https://kinopoiskapiunofficial.tech</a> </br> <b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</b>  –ª–∏–º–∏—Ç–æ–≤ –Ω–∞ –æ–±—â–µ–µ –∫–æ–ª-–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç. –ù–æ –µ—Å—Ç—å –Ω–∞ –∫–æ–ª-–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É. </br> –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ <b>20 req/sec</b>. </br> <b>–ù–µ–∫–æ—Ç–æ—Ä—ã–µ</b> —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∏–º–µ—é—Ç —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, –æ–Ω–∏ —É–∫–∞–∑–∞–Ω—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ <b>429</b>. </br>
 * OpenAPI spec version: 2.0.1
 */
import useSwr from 'swr'
import type { SWRConfiguration, Key } from 'swr'
import type {
	StaffResponse,
	GetApiV1StaffParams,
	PersonResponse,
} from '../../models'
import { customInstance } from '../../mutator/custom-instance'
import type { ErrorType } from '../../mutator/custom-instance'

/**
 * @summary –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –∞–∫—Ç–µ—Ä–∞—Ö, —Ä–µ–∂–∏—Å–µ—Ä–∞—Ö –∏ —Ç.–¥. –ø–æ kinopoisk film id
 */
export const getApiV1Staff = (params: GetApiV1StaffParams) => {
	return customInstance<StaffResponse[]>({
		url: `/api/v1/staff`,
		method: 'get',
		params,
	})
}

export const getGetApiV1StaffKey = (params: GetApiV1StaffParams) => [
	`/api/v1/staff`,
	...(params ? [params] : []),
]

export type GetApiV1StaffQueryResult = NonNullable<
	Awaited<ReturnType<typeof getApiV1Staff>>
>
export type GetApiV1StaffQueryError = ErrorType<void>

export const useGetApiV1Staff = <TError = ErrorType<void>>(
	params: GetApiV1StaffParams,
	options?: {
		swr?: SWRConfiguration<
			Awaited<ReturnType<typeof getApiV1Staff>>,
			TError
		> & { swrKey?: Key; enabled?: boolean }
	}
) => {
	const { swr: swrOptions } = options ?? {}

	const isEnabled = swrOptions?.enabled !== false
	const swrKey =
		swrOptions?.swrKey ??
		(() => (isEnabled ? getGetApiV1StaffKey(params) : null))
	const swrFn = () => getApiV1Staff(params)

	const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
		swrKey,
		swrFn,
		swrOptions
	)

	return {
		swrKey,
		...query,
	}
}

/**
 * @summary –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —á–µ–ª–æ–≤–µ–∫–µ –ø–æ kinopoisk person id
 */
export const getApiV1StaffId = (id: number) => {
	return customInstance<PersonResponse>({
		url: `/api/v1/staff/${id}`,
		method: 'get',
	})
}

export const getGetApiV1StaffIdKey = (id: number) => [`/api/v1/staff/${id}`]

export type GetApiV1StaffIdQueryResult = NonNullable<
	Awaited<ReturnType<typeof getApiV1StaffId>>
>
export type GetApiV1StaffIdQueryError = ErrorType<void>

export const useGetApiV1StaffId = <TError = ErrorType<void>>(
	id: number,
	options?: {
		swr?: SWRConfiguration<
			Awaited<ReturnType<typeof getApiV1StaffId>>,
			TError
		> & { swrKey?: Key; enabled?: boolean }
	}
) => {
	const { swr: swrOptions } = options ?? {}

	const isEnabled = swrOptions?.enabled !== false && !!id
	const swrKey =
		swrOptions?.swrKey ?? (() => (isEnabled ? getGetApiV1StaffIdKey(id) : null))
	const swrFn = () => getApiV1StaffId(id)

	const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
		swrKey,
		swrFn,
		swrOptions
	)

	return {
		swrKey,
		...query,
	}
}
